#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, barrel, flare, bomb1, bomb2, bomb3, bomb4, bomb5,
       bomb6, bomb7, bomb8, bomb9, bomb10;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	turn body to x-axis <5.000000> now;
	Static_Var_4 = 0;
	Static_Var_5 = 10;
	Static_Var_6 = 0;
	Static_Var_3 = 10000;
	start-script SmokeUnit();
}

Reload()
{
	sleep 5000;
	show bomb1;
	sleep 3500;
	show bomb2;
	sleep 3500;
	show bomb3;
	sleep 3500;
	show bomb4;
	sleep 3500;
	show bomb5;
	sleep 3500;
	show bomb6;
	sleep 3500;
	show bomb7;
	sleep 3500;
	show bomb8;
	sleep 3500;
	show bomb9;
	sleep 3500;
	show bomb10;
	sleep 6500;
	Static_Var_5 = 10;
}

RestoreAfterDelay()
{
	sleep Static_Var_3;
	turn barrel to y-axis <0.000000> speed <100.000000>;
	turn barrel to x-axis <0.000000> speed <100.000000>;
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 2;
	set-signal-mask 2;
	turn barrel to y-axis Func_Var_1 speed <50.000000>;
	turn barrel to x-axis <0.000000> - Func_Var_2 speed <50.000000>;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	set-signal-mask 4;
	if( Static_Var_5 < 1 )
	{
		sleep 800;
	}
	if( Static_Var_5 > 0 )
	{
		return (1);
	}
}

FireWeapon1()
{
}

FireWeapon2()
{
	--Static_Var_5;
	if( Static_Var_5 == 0 )
	{
		start-script Reload();
	}
	if( Static_Var_4 == 0 )
	{
		hide bomb1;
	}
	if( Static_Var_4 == 1 )
	{
		hide bomb2;
	}
	if( Static_Var_4 == 2 )
	{
		hide bomb3;
	}
	if( Static_Var_4 == 3 )
	{
		hide bomb4;
	}
	if( Static_Var_4 == 4 )
	{
		hide bomb5;
	}
	if( Static_Var_4 == 5 )
	{
		hide bomb6;
	}
	if( Static_Var_4 == 6 )
	{
		hide bomb7;
	}
	if( Static_Var_4 == 7 )
	{
		hide bomb8;
	}
	if( Static_Var_4 == 8 )
	{
		hide bomb9;
	}
	if( Static_Var_4 == 9 )
	{
		hide bomb10;
	}
	++Static_Var_4;
	if( Static_Var_4 == 10 )
	{
		Static_Var_4 = 0;
	}
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 0;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 1;
}

QueryWeapon1(Func_Var_1)
{
	Func_Var_1 = 2;
}

QueryWeapon2(Func_Var_1)
{
	if( Static_Var_4 == 1 )
	{
		Func_Var_1 = 3;
	}
	if( Static_Var_4 == 2 )
	{
		Func_Var_1 = 4;
	}
	if( Static_Var_4 == 3 )
	{
		Func_Var_1 = 5;
	}
	if( Static_Var_4 == 4 )
	{
		Func_Var_1 = 6;
	}
	if( Static_Var_4 == 5 )
	{
		Func_Var_1 = 7;
	}
	if( Static_Var_4 == 6 )
	{
		Func_Var_1 = 8;
	}
	if( Static_Var_4 == 7 )
	{
		Func_Var_1 = 9;
	}
	if( Static_Var_4 == 8 )
	{
		Func_Var_1 = 10;
	}
	if( Static_Var_4 == 9 )
	{
		Func_Var_1 = 11;
	}
	if( Static_Var_4 == 10 )
	{
		Func_Var_1 = 12;
	}
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 100 )
	{
		corpsetype = 3;
		explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	}
	corpsetype = 3;
	explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
