#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body,  radar, nano, wake1, wake2;

static-var  Static_Var_1, Static_Var_2;

// Signal definitions
#define SIG_MOVE			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = 4;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	spin radar around y-axis speed <30.000000>;
	
	start-script SmokeUnit();
}


StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	set INBUILDSTANCE to 1;

	
}

StopBuilding()
{
	

	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
	piecenum = body;
}
SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
	
		explode radar type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type FALL | EXPLODE_ON_HIT | BITMAP1;
		
		explode radar type FALL | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;

	explode radar type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
