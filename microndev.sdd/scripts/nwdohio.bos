#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body,rotor, torp1, torp2, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17, m18, m19, m20, m21, m22, m23, m24; 
static-var    restore_delay , shooting_num, shooting_num2;



#define SIG_AIM				2
#define SIG_AIM_2			4




SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}



Create()
{
	restore_delay = 5000;
	shooting_num=1;
	shooting_num2=1;
	start-script SmokeUnit();
}




StartMoving()
{

		spin rotor around z-axis speed <5000.0000000>;
		
		
	
}

StopMoving()
{
	
	stop-spin rotor around z-axis  decelerate <50.0000000>;
}



RestoreWeapon2()
{
sleep restore_delay;
move body to y-axis [0.000000] speed [2.000000];
}





AimWeapon1(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	

	
	return (1);
	
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn body to x-axis <20.000000> speed <10.000000>;
	move body to y-axis [5.000000] speed [1.000000];
	turn body to x-axis <0.000000> speed <2.000000>;
	wait-for-move body along y-axis;
	start-script RestoreWeapon2();
	
	return (1);
	
	
}




FireWeapon1()
{

}

FireWeapon2()
{

}
	




AimFromWeapon1(piecenum)
{
	piecenum = body;
}

AimFromWeapon2(piecenum)
{
	piecenum = m1;
}




QueryWeapon1(piecenum)
{
if (shooting_num==1)
{
piecenum=torp1;
}

if (shooting_num==2)
{
piecenum=torp2;
}
}

QueryWeapon2(piecenum)
{
if (shooting_num2==1)
{
piecenum=m1;
}

if (shooting_num2==2)
{
piecenum=m2;
}
if (shooting_num2==3)
{
piecenum=m3;
}

if (shooting_num2==4)
{
piecenum=m4;
}
if (shooting_num2==5)
{
piecenum=m5;
}

if (shooting_num2==6)
{
piecenum=m6;
}
if (shooting_num2==7)
{
piecenum=m7;
}

if (shooting_num2==8)
{
piecenum=m8;
}
if (shooting_num2==9)
{
piecenum=m9;
}

if (shooting_num2==10)
{
piecenum=m10;
}
if (shooting_num2==11)
{
piecenum=m11;
}

if (shooting_num2==12)
{
piecenum=m12;
}
if (shooting_num2==13)
{
piecenum=m13;
}

if (shooting_num2==14)
{
piecenum=m14;
}
if (shooting_num2==15)
{
piecenum=m15;
}

if (shooting_num2==16)
{
piecenum=m16;
}
if (shooting_num2==17)
{
piecenum=m17;
}

if (shooting_num2==18)
{
piecenum=m18;
}
if (shooting_num2==19)
{
piecenum=m19;
}

if (shooting_num2==20)
{
piecenum=m20;
}
if (shooting_num2==21)
{
piecenum=m21;
}

if (shooting_num2==22)
{
piecenum=m22;
}
if (shooting_num2==23)
{
piecenum=m23;
}

if (shooting_num2==24)
{
piecenum=m24;
}

	
}




SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	
	if( severity <= 25 )
	{
		corpsetype = 1;
		
		explode body type BITMAPONLY | BITMAP2;
		
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		
		explode body type BITMAPONLY | BITMAP2;
		
		return (0);
	}
	corpsetype = 3;
	
	explode body type BITMAPONLY | BITMAP2;
}
