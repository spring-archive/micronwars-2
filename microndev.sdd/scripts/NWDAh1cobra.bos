#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, turret, sleeve, barrel, flare, m1, m2, m3,
       m4, m5, m6, m7, m8, trotor, brotor;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_4 = 0;
	Static_Var_5 = 8;
	Static_Var_6 = 0;
	Static_Var_3 = 10000;
	start-script SmokeUnit();
}

StartMoving()
{
	
	spin trotor around y-axis speed <4000.000000>;
	spin brotor around x-axis speed <4000.000000>;
}

StopMoving()
{
	stop-spin trotor around y-axis decelerate <10.000000>;
	stop-spin brotor around x-axis decelerate <10.000000>;
	
}

Reload()
{
	sleep 5000;
	show m1;
	sleep 3500;
	show m2;
	sleep 3500;
	show m3;
	sleep 3500;
	show m4;
	sleep 3500;
	show m5;
	sleep 3500;
	show m6;
	sleep 3500;
	show m7;
	sleep 3500;
	show m8;
	sleep 6500;
	Static_Var_5 = 8;
}

RestoreAfterDelay()
{
	sleep Static_Var_3;
	turn turret to y-axis <0.000000> speed <20.000000>;
	turn sleeve to x-axis <0.000000> speed <5.000000>;
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis Func_Var_1 speed <40.000000>;
	turn sleeve to x-axis <0.000000> - Func_Var_2 speed <35.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	set-signal-mask 4;
	if( Static_Var_5 < 1 )
	{
		sleep 800;
	}
	if( Static_Var_5 > 0 )
	{
		return (1);
	}
}

FireWeapon1()
{
	spin barrel around z-axis speed <1000.000000>;
	sleep 50;
	stop-spin barrel around z-axis decelerate <1000.000000>;
}

FireWeapon2()
{
	--Static_Var_5;
	if( Static_Var_5 == 0 )
	{
		start-script Reload();
	}
	if( Static_Var_4 == 0 )
	{
		hide m1;
	}
	if( Static_Var_4 == 1 )
	{
		hide m2;
	}
	if( Static_Var_4 == 2 )
	{
		hide m3;
	}
	if( Static_Var_4 == 3 )
	{
		hide m4;
	}
	if( Static_Var_4 == 4 )
	{
		hide m5;
	}
	if( Static_Var_4 == 5 )
	{
		hide m6;
	}
	if( Static_Var_4 == 6 )
	{
		hide m7;
	}
	if( Static_Var_4 == 7 )
	{
		hide m8;
	}
	++Static_Var_4;
	if( Static_Var_4 == 8 )
	{
		Static_Var_4 = 0;
	}
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 0;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 1;
}

QueryWeapon1(Func_Var_1)
{
	Func_Var_1 = 3;
}

QueryWeapon2(Func_Var_1)
{
	if( Static_Var_4 == 1 )
	{
		Func_Var_1 = 4;
	}
	if( Static_Var_4 == 2 )
	{
		Func_Var_1 = 5;
	}
	if( Static_Var_4 == 3 )
	{
		Func_Var_1 = 6;
	}
	if( Static_Var_4 == 4 )
	{
		Func_Var_1 = 7;
	}
	if( Static_Var_4 == 5 )
	{
		Func_Var_1 = 8;
	}
	if( Static_Var_4 == 6 )
	{
		Func_Var_1 = 9;
	}
	if( Static_Var_4 == 7 )
	{
		Func_Var_1 = 10;
	}
	if( Static_Var_4 == 8 )
	{
		Func_Var_1 = 11;
	}
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 100 )
	{
		corpsetype = 3;
		explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	}
	corpsetype = 3;
	explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
