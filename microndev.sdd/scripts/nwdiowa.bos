#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, bturret1, bsleeve1, bbarrel11, bflare1, bbarrel12, bflare2, bbarrel13, 
	   bflare3, bturret2, bsleeve2, bbarrel21, bflare4, bbarrel22, bflare5, bbarrel23,
	   bflare6, bturret3, bsleeve3, bbarrel31, bflare7, bbarrel32, bflare8, bbarrel33,
	   bflare9, sturret1, ssleeve1, sflare1, sturret2, ssleeve2, sflare2, sturret3,
	   ssleeve3, sflare3, sturret4, ssleeve4, sflare4, wake1, wake2;

static-var   Static_Var_2, restore_delay, shooting_num;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			16
#define SIG_MOVE			8
#define SIG_AIM_4			32
#define SIG_AIM_5			64




SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


Create()
{
	turn bturret3 to y-axis <180.000000> now;
	turn sturret1 to y-axis <-90.000000> now;
	turn sturret2 to y-axis <90.000000> now;
	turn sturret3 to y-axis <-90.000000> now;
	turn sturret4 to y-axis <90.000000> now;
	shooting_num = 1;
	Static_Var_2 = 9;
	restore_delay = 3000;
	start-script SmokeUnit();
}

Reload()
{
	sleep 1000;
	move bbarrel11 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel12 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel13 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel21 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel22 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel23 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel31 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel32 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move bbarrel33 to z-axis [0.000000] speed [2.000000];
	sleep 10000;
	Static_Var_2 = 9;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

RestoreWeapon1()
{
	sleep restore_delay;
	turn bturret1 to y-axis <0.000000> speed <10.000000>;
	turn bsleeve1 to x-axis <0.000000> speed <10.000000>;
		turn bturret2 to y-axis <0.000000> speed <10.000000>;
	turn bsleeve2 to x-axis <0.000000> speed <10.000000>;
	turn bturret3 to y-axis <180.000000> speed <10.000000>;
	turn bsleeve3 to x-axis <0.000000> speed <10.000000>;
	
}

RestoreWeapon2()
{
	sleep restore_delay;
	turn sturret1 to y-axis <-90.000000> speed <50.000000>;
	turn ssleeve1 to x-axis <0.000000> speed <50.000000>;
	
	
}

RestoreWeapon3()
{
	sleep restore_delay;
	turn sturret2 to y-axis <90.000000> speed <50.000000>;
	turn ssleeve2 to x-axis <0.000000> speed <50.000000>;
	
	
}

RestoreWeapon4()
{
	sleep restore_delay;
	turn sturret3 to y-axis <-90.000000> speed <50.000000>;
	turn ssleeve3 to x-axis <0.000000> speed <50.000000>;
	
	
}

RestoreWeapon5()
{
	sleep restore_delay;
	turn sturret4 to y-axis <90.000000> speed <50.000000>;
	turn ssleeve4 to x-axis <0.000000> speed <50.000000>;
	
	
}




AimWeapon1(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
		if( Static_Var_2 < 1 )
	{
		sleep 800;
	}
	if( Static_Var_2 > 0 )
	{
	turn bturret1 to y-axis heading speed <10.000000>;
	turn bsleeve1 to x-axis <0.000000> - pitch speed <10.000000>;
	turn bturret2 to y-axis heading speed <10.000000>;
	turn bsleeve2 to x-axis <0.000000> - pitch speed <10.000000>;
	turn bturret3 to y-axis heading speed <10.000000>;
	turn bsleeve3 to x-axis <0.000000> - pitch speed <10.000000>;
	wait-for-turn bturret1 around y-axis;
	wait-for-turn bsleeve1 around x-axis;
	wait-for-turn bturret2 around y-axis;
	wait-for-turn bsleeve2 around x-axis;
	wait-for-turn bturret3 around y-axis;
	wait-for-turn bsleeve3 around x-axis;
	start-script RestoreWeapon1();
	return (1);
	}
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn sturret1 to y-axis heading speed <80.000000>;
	turn ssleeve1 to x-axis <0.000000> - pitch speed <80.000000>;
	wait-for-turn sturret1 around y-axis;
	wait-for-turn ssleeve1 around x-axis;
	start-script RestoreWeapon2();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn sturret2 to y-axis heading speed <80.000000>;
	turn ssleeve2 to x-axis <0.000000> - pitch speed <80.000000>;
	wait-for-turn sturret2 around y-axis;
	wait-for-turn ssleeve2 around x-axis;
	start-script RestoreWeapon3();
	return (1);
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	turn sturret3 to y-axis heading speed <80.000000>;
	turn ssleeve3 to x-axis <0.000000> - pitch speed <80.000000>;
	wait-for-turn sturret3 around y-axis;
	wait-for-turn ssleeve3 around x-axis;
	start-script RestoreWeapon4();
	return (1);
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	turn sturret4 to y-axis heading speed <80.000000>;
	turn ssleeve4 to x-axis <0.000000> - pitch speed <80.000000>;
	wait-for-turn sturret4 around y-axis;
	wait-for-turn ssleeve4 around x-axis;
	start-script RestoreWeapon5();
	return (1);
}


FireWeapon1()
{
	--Static_Var_2;
	if( Static_Var_2 == 0 )
	{
		start-script Reload();
	}

if(shooting_num==1)
{
move bbarrel11 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare1;
}

if(shooting_num==2)
{
move bbarrel12 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare2;
}
if(shooting_num==3)
{
move bbarrel13 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare3;
}

if(shooting_num==4)
{
move bbarrel21 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare4;
}
if(shooting_num==5)
{
move bbarrel22 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare5;
}

if(shooting_num==6)
{
move bbarrel23 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare6;
}
if(shooting_num==7)
{
move bbarrel31 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare7;

}
if(shooting_num==8)
{
move bbarrel32 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare8;
}
if(shooting_num==9)
{
move bbarrel33 to z-axis [-1.5.000000] speed [2.000000];
emit-sfx 1024 from bflare9;
}
shooting_num=shooting_num+1;

if( shooting_num == 9)
{
shooting_num=1;
}
}

FireWeapon2()
{

}

FireWeapon3()
{

}

FireWeapon4()
{

}

FireWeapon5()
{

}

AimFromWeapon1(piecenum)
{
	piecenum = bturret1;
}

AimFromWeapon2(piecenum)
{
	piecenum = sturret1;
}

AimFromWeapon3(piecenum)
{
	piecenum = sturret2;
}

AimFromWeapon4(piecenum)
{
	piecenum = sturret3;
}

AimFromWeapon5(piecenum)
{
	piecenum = sturret4;
}


QueryWeapon1(piecenum)
{
	if( shooting_num == 1 )
	{
		piecenum = bflare1;
	}
	if( shooting_num == 2 )
	{
		piecenum = bflare2;
	}
	if( shooting_num == 3 )
	{
		piecenum = bflare3;
	}
	if( shooting_num == 4 )
	{
		piecenum = bflare4;
	}
	if( shooting_num == 5 )
	{
		piecenum = bflare5;
	}
	if( shooting_num == 6 )
	{
		piecenum = bflare6;
	}
	if( shooting_num == 7 )
	{
		piecenum = bflare7;
	}
	if( shooting_num == 8 )
	{
		piecenum = bflare8;
	}
	if( shooting_num == 9 )
	{
		piecenum = bflare9;
	}
}

QueryWeapon2(piecenum)
{
	
		piecenum = sflare1;
	
	
}

QueryWeapon3(piecenum)
{

		piecenum = sflare2;

	
}

QueryWeapon4(piecenum)
{
	
		piecenum = sflare3;
	
	
}

QueryWeapon5(piecenum)
{

		piecenum = sflare4;

	
}



SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	
	if( severity <= 25 )
	{
		corpsetype = 1;
		
		explode body type BITMAPONLY | BITMAP2;
		
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		
		explode body type BITMAPONLY | BITMAP2;
		
		return (0);
	}
	corpsetype = 3;
	
	explode body type BITMAPONLY | BITMAP2;
}
