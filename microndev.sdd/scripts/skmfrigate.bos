#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, radar, turret, sleeve, missile1, missile2, missile3, missile4,
       missile5, missile6, missile7, missile8, missile9, missile10, missile11, missile12,
       bturret, bsleeve, asmis1, asmis2, asmis3, asmis4, asmis5, asmis6,
       asmis7, asmis8, asmis9, asmis10, asmis11, asmis12, asmis13, asmis14,
       asmis15, asmis16, wake1, wake2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;

// Signal definitions
#define SIG_MOVE			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = 4;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_3 = 16;
	spin radar around y-axis speed <30.000000>;
	Static_Var_4 = 10000;
	start-script SmokeUnit();
}

Reload()
{
	sleep 5000;
	show asmis1;
	sleep 2000;
	show asmis2;
	sleep 2000;
	show asmis3;
	sleep 2000;
	show asmis4;
	sleep 2000;
	show asmis5;
	sleep 2000;
	show asmis6;
	sleep 2000;
	show asmis7;
	sleep 2000;
	show asmis8;
	sleep 2000;
	show asmis9;
	sleep 2000;
	show asmis10;
	sleep 2000;
	show asmis11;
	sleep 2000;
	show asmis12;
	sleep 2000;
	show asmis13;
	sleep 2000;
	show asmis14;
	sleep 2000;
	show asmis15;
	sleep 2000;
	show asmis16;
	sleep 2000;
	Static_Var_3 = 16;
}

RestoreWeapon1()
{
	sleep Static_Var_4;
	turn turret to y-axis <0.000000> speed <25.000000>;
	turn sleeve to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapon2()
{
	sleep Static_Var_4;
	turn bturret to y-axis <0.000000> speed <55.000000>;
	turn bsleeve to x-axis <0.000000> speed <55.000000>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis Func_Var_1 speed <55.000000>;
	turn sleeve to x-axis <0.000000> - Func_Var_2 speed <30.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreWeapon1();
	return (1);
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	set-signal-mask 4;
	if( Static_Var_3 < 1 )
	{
		sleep 800;
	}
	if( Static_Var_3 > 0 )
	{
		turn bturret to y-axis Func_Var_1 speed <35.000000>;
		turn bsleeve to x-axis <0.000000> - Func_Var_2 speed <15.000000>;
		wait-for-turn bturret around y-axis;
		wait-for-turn bsleeve around x-axis;
		start-script RestoreWeapon2();
		return (1);
	}
}

FireWeapon1()
{
	++Static_Var_1;
	if( Static_Var_1 == 12 )
	{
		Static_Var_1 = 2;
	}
}

FireWeapon2()
{
	--Static_Var_3;
	if( Static_Var_3 == 0 )
	{
		start-script Reload();
	}
	if( Static_Var_2 == 0 )
	{
		hide asmis1;
	}
	if( Static_Var_2 == 1 )
	{
		hide asmis2;
	}
	if( Static_Var_2 == 2 )
	{
		hide asmis3;
	}
	if( Static_Var_2 == 3 )
	{
		hide asmis4;
	}
	if( Static_Var_2 == 4 )
	{
		hide asmis5;
	}
	if( Static_Var_2 == 5 )
	{
		hide asmis6;
	}
	if( Static_Var_2 == 6 )
	{
		hide asmis7;
	}
	if( Static_Var_2 == 7 )
	{
		hide asmis8;
	}
	if( Static_Var_2 == 8 )
	{
		hide asmis9;
	}
	if( Static_Var_2 == 9 )
	{
		hide asmis10;
	}
	if( Static_Var_2 == 10 )
	{
		hide asmis11;
	}
	if( Static_Var_2 == 11 )
	{
		hide asmis12;
	}
	if( Static_Var_2 == 12 )
	{
		hide asmis13;
	}
	if( Static_Var_2 == 13 )
	{
		hide asmis14;
	}
	if( Static_Var_2 == 14 )
	{
		hide asmis15;
	}
	if( Static_Var_2 == 15 )
	{
		hide asmis16;
	}
	++Static_Var_2;
	if( Static_Var_2 == 16 )
	{
		Static_Var_2 = 16;
	}
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 2;
}

QueryWeapon1(Func_Var_1)
{
	if( Static_Var_1 == 1 )
	{
		Func_Var_1 = 4;
	}
	if( Static_Var_1 == 2 )
	{
		Func_Var_1 = 5;
	}
	if( Static_Var_1 == 3 )
	{
		Func_Var_1 = 6;
	}
	if( Static_Var_1 == 4 )
	{
		Func_Var_1 = 7;
	}
	if( Static_Var_1 == 5 )
	{
		Func_Var_1 = 8;
	}
	if( Static_Var_1 == 6 )
	{
		Func_Var_1 = 9;
	}
	if( Static_Var_1 == 7 )
	{
		Func_Var_1 = 10;
	}
	if( Static_Var_1 == 8 )
	{
		Func_Var_1 = 11;
	}
	if( Static_Var_1 == 9 )
	{
		Func_Var_1 = 12;
	}
	if( Static_Var_1 == 10 )
	{
		Func_Var_1 = 13;
	}
	if( Static_Var_1 == 11 )
	{
		Func_Var_1 = 14;
	}
	if( Static_Var_1 == 12 )
	{
		Func_Var_1 = 15;
	}
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 16;
}

QueryWeapon2(Func_Var_1)
{
	if( Static_Var_2 == 1 )
	{
		Func_Var_1 = 18;
	}
	if( Static_Var_2 == 2 )
	{
		Func_Var_1 = 19;
	}
	if( Static_Var_2 == 3 )
	{
		Func_Var_1 = 20;
	}
	if( Static_Var_2 == 4 )
	{
		Func_Var_1 = 21;
	}
	if( Static_Var_2 == 5 )
	{
		Func_Var_1 = 22;
	}
	if( Static_Var_2 == 6 )
	{
		Func_Var_1 = 23;
	}
	if( Static_Var_2 == 7 )
	{
		Func_Var_1 = 24;
	}
	if( Static_Var_2 == 8 )
	{
		Func_Var_1 = 25;
	}
	if( Static_Var_2 == 9 )
	{
		Func_Var_1 = 26;
	}
	if( Static_Var_2 == 10 )
	{
		Func_Var_1 = 27;
	}
	if( Static_Var_2 == 11 )
	{
		Func_Var_1 = 28;
	}
	if( Static_Var_2 == 12 )
	{
		Func_Var_1 = 29;
	}
	if( Static_Var_2 == 13 )
	{
		Func_Var_1 = 30;
	}
	if( Static_Var_2 == 14 )
	{
		Func_Var_1 = 31;
	}
	if( Static_Var_2 == 15 )
	{
		Func_Var_1 = 32;
	}
	if( Static_Var_2 == 16 )
	{
		Func_Var_1 = 33;
	}
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		explode sleeve type BITMAPONLY | BITMAP3;
		explode radar type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode turret type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode sleeve type FALL | EXPLODE_ON_HIT | BITMAP3;
		explode radar type FALL | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode radar type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
