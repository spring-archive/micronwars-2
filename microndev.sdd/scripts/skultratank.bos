#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, turret, sleeve, barrel1, barrel2, barrel3, barrel4, barrel5,
       barrel6, flare1, flare2, flare3, flare4, flare5, flare6, rhead,
       missile1, missile2, missile3, missile4, missile5, missile6, missile7, missile8,
       missile9, missile10, missile11, missile12, missile13, missile14, missile15, missile16,
       missile17, missile18, missile19, missile20, missile21, missile22, missile23, missile24;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_4 = 0;
	Static_Var_5 = 24;
	Static_Var_6 = 0;
	Static_Var_7 = 6;
	Static_Var_3 = 10000;
	start-script SmokeUnit();
}

Reload2()
{
	sleep 1000;
	move barrel1 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move barrel2 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move barrel3 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move barrel4 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move barrel5 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	move barrel6 to z-axis [0.000000] speed [2.000000];
	sleep 1000;
	Static_Var_7 = 6;
}

Reload()
{
	sleep 5000;
	show missile1;
	sleep 3500;
	show missile2;
	sleep 3500;
	show missile3;
	sleep 3500;
	show missile4;
	sleep 3500;
	show missile5;
	sleep 3500;
	show missile6;
	sleep 3500;
	show missile7;
	sleep 3500;
	show missile8;
	sleep 3500;
	show missile9;
	sleep 3500;
	show missile10;
	sleep 3500;
	show missile11;
	sleep 3500;
	show missile12;
	sleep 3500;
	show missile13;
	sleep 3500;
	show missile14;
	sleep 3500;
	show missile15;
	sleep 3500;
	show missile16;
	sleep 3500;
	show missile17;
	sleep 3500;
	show missile18;
	sleep 3500;
	show missile19;
	sleep 3500;
	show missile20;
	sleep 3500;
	show missile21;
	sleep 3500;
	show missile22;
	sleep 3500;
	show missile23;
	sleep 3500;
	show missile24;
	sleep 4500;
	Static_Var_5 = 24;
}

RestoreAfterDelay()
{
	sleep Static_Var_3;
	turn turret to y-axis <0.000000> speed <40.000000>;
	turn sleeve to x-axis <0.000000> speed <20.000000>;
	move rhead to y-axis [0.000000] speed [1.000000];
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 2;
	set-signal-mask 2;
	if( Static_Var_7 < 1 )
	{
		sleep 800;
	}
	if( Static_Var_7 > 0 )
	{
		turn turret to y-axis Func_Var_1 speed <25.000000>;
		turn sleeve to x-axis <0.000000> - Func_Var_2 speed <10.000000>;
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
		start-script RestoreAfterDelay();
		return (1);
	}
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	set-signal-mask 4;
	if( Static_Var_5 < 1 )
	{
		sleep 800;
	}
	if( Static_Var_5 > 0 )
	{
		move rhead to y-axis [2.300000] speed [1.000000];
		wait-for-move rhead along y-axis;
		wait-for-turn turret around y-axis;
		return (1);
	}
}

FireWeapon1()
{
	--Static_Var_7;
	if( Static_Var_7 == 0 )
	{
		start-script Reload2();
	}
	if( Static_Var_6 == 0 )
	{
		move barrel1 to z-axis [-2.000000] now;
		sleep 50;
		emit-sfx 1024 | 0 from flare1;
	}
	if( Static_Var_6 == 1 )
	{
		move barrel2 to z-axis [-2.000000] now;
		sleep 50;
		emit-sfx 1024 | 0 from flare2;
	}
	if( Static_Var_6 == 2 )
	{
		move barrel3 to z-axis [-2.000000] now;
		sleep 50;
		emit-sfx 1024 | 0 from flare3;
	}
	if( Static_Var_6 == 3 )
	{
		move barrel4 to z-axis [-2.000000] now;
		sleep 50;
		emit-sfx 1024 | 0 from flare4;
	}
	if( Static_Var_6 == 4 )
	{
		move barrel5 to z-axis [-2.000000] now;
		sleep 50;
		emit-sfx 1024 | 0 from flare5;
	}
	if( Static_Var_6 == 5 )
	{
		move barrel6 to z-axis [-2.000000] now;
		sleep 50;
		emit-sfx 1024 | 0 from flare6;
	}
	++Static_Var_6;
	if( Static_Var_6 == 6 )
	{
		Static_Var_6 = 0;
	}
}

FireWeapon2()
{
	--Static_Var_5;
	if( Static_Var_5 == 0 )
	{
		start-script Reload();
	}
	if( Static_Var_4 == 0 )
	{
		hide missile1;
	}
	if( Static_Var_4 == 1 )
	{
		hide missile2;
	}
	if( Static_Var_4 == 2 )
	{
		hide missile3;
	}
	if( Static_Var_4 == 3 )
	{
		hide missile4;
	}
	if( Static_Var_4 == 4 )
	{
		hide missile5;
	}
	if( Static_Var_4 == 5 )
	{
		hide missile6;
	}
	if( Static_Var_4 == 6 )
	{
		hide missile7;
	}
	if( Static_Var_4 == 7 )
	{
		hide missile8;
	}
	if( Static_Var_4 == 8 )
	{
		hide missile9;
	}
	if( Static_Var_4 == 9 )
	{
		hide missile10;
	}
	if( Static_Var_4 == 10 )
	{
		hide missile11;
	}
	if( Static_Var_4 == 11 )
	{
		hide missile12;
	}
	if( Static_Var_4 == 12 )
	{
		hide missile13;
	}
	if( Static_Var_4 == 13 )
	{
		hide missile14;
	}
	if( Static_Var_4 == 14 )
	{
		hide missile15;
	}
	if( Static_Var_4 == 15 )
	{
		hide missile16;
	}
	if( Static_Var_4 == 16 )
	{
		hide missile17;
	}
	if( Static_Var_4 == 17 )
	{
		hide missile18;
	}
	if( Static_Var_4 == 18 )
	{
		hide missile19;
	}
	if( Static_Var_4 == 19 )
	{
		hide missile20;
	}
	if( Static_Var_4 == 20 )
	{
		hide missile21;
	}
	if( Static_Var_4 == 21 )
	{
		hide missile22;
	}
	if( Static_Var_4 == 22 )
	{
		hide missile23;
	}
	if( Static_Var_4 == 23 )
	{
		hide missile24;
	}
	++Static_Var_4;
	if( Static_Var_4 == 24 )
	{
		Static_Var_4 = 0;
	}
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 1;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 1;
}

QueryWeapon1(Func_Var_1)
{
	if( Static_Var_6 == 1 )
	{
		Func_Var_1 = 9;
	}
	if( Static_Var_6 == 2 )
	{
		Func_Var_1 = 10;
	}
	if( Static_Var_6 == 3 )
	{
		Func_Var_1 = 11;
	}
	if( Static_Var_6 == 4 )
	{
		Func_Var_1 = 12;
	}
	if( Static_Var_6 == 5 )
	{
		Func_Var_1 = 13;
	}
	if( Static_Var_6 == 6 )
	{
		Func_Var_1 = 14;
	}
}

QueryWeapon2(Func_Var_1)
{
	if( Static_Var_4 == 1 )
	{
		Func_Var_1 = 16;
	}
	if( Static_Var_4 == 2 )
	{
		Func_Var_1 = 17;
	}
	if( Static_Var_4 == 3 )
	{
		Func_Var_1 = 18;
	}
	if( Static_Var_4 == 4 )
	{
		Func_Var_1 = 19;
	}
	if( Static_Var_4 == 5 )
	{
		Func_Var_1 = 20;
	}
	if( Static_Var_4 == 6 )
	{
		Func_Var_1 = 21;
	}
	if( Static_Var_4 == 7 )
	{
		Func_Var_1 = 22;
	}
	if( Static_Var_4 == 8 )
	{
		Func_Var_1 = 23;
	}
	if( Static_Var_4 == 9 )
	{
		Func_Var_1 = 24;
	}
	if( Static_Var_4 == 10 )
	{
		Func_Var_1 = 25;
	}
	if( Static_Var_4 == 11 )
	{
		Func_Var_1 = 26;
	}
	if( Static_Var_4 == 12 )
	{
		Func_Var_1 = 27;
	}
	if( Static_Var_4 == 13 )
	{
		Func_Var_1 = 28;
	}
	if( Static_Var_4 == 14 )
	{
		Func_Var_1 = 29;
	}
	if( Static_Var_4 == 15 )
	{
		Func_Var_1 = 30;
	}
	if( Static_Var_4 == 16 )
	{
		Func_Var_1 = 31;
	}
	if( Static_Var_4 == 17 )
	{
		Func_Var_1 = 32;
	}
	if( Static_Var_4 == 18 )
	{
		Func_Var_1 = 33;
	}
	if( Static_Var_4 == 19 )
	{
		Func_Var_1 = 34;
	}
	if( Static_Var_4 == 20 )
	{
		Func_Var_1 = 35;
	}
	if( Static_Var_4 == 21 )
	{
		Func_Var_1 = 36;
	}
	if( Static_Var_4 == 22 )
	{
		Func_Var_1 = 37;
	}
	if( Static_Var_4 == 23 )
	{
		Func_Var_1 = 38;
	}
	if( Static_Var_4 == 24 )
	{
		Func_Var_1 = 39;
	}
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode sleeve type BITMAPONLY | BITMAP5;
		explode turret type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | BITMAP1;
		explode sleeve type FALL | BITMAP5;
		explode turret type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 100 )
	{
		corpsetype = 3;
		explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	}
	corpsetype = 3;
	explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
